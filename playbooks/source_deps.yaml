# This playbook installs necessary dependencies for running the Aptos node
# from source. Note: You'll see that some tasks first source the cargo env
# and then run the cargo command. This is because the cargo command is not
# available in the PATH until the cargo env is sourced. This is a known
# "feature" of Ansible: https://github.com/ansible/ansible/issues/4854#issuecomment-67451069.

---
- hosts: nodes
  name: Install package manager dependencies
  tasks:
    # These are packages where the name is the same for the tested systems (see README).
    - name: Install common package manager dependencies
      become: true
      # TODO: Consider pinning to particular versions.
      # TODO: Consider thinning scripts/dev_setup.sh and using that instead.
      ansible.builtin.package:
        name:
          - clang
          - git
          - lld
          - llvm
        state: present

    - name: Install packages specific to Debian-like systems
      become: true
      ansible.builtin.package:
        name:
          - build-essential
          - libssl-dev
          - pkg-config
        state: present
      when: ansible_os_family == "Debian"

    - name: Install packages specific to Redhat-like systems
      become: true
      ansible.builtin.package:
        name:
          - gcc
          - gcc-c++
          - kernel-devel
          - make
          - openssl-devel
          - pkgconfig
        state: present
      when: ansible_os_family == "Redhat"

    - name: Install packages specific to Arch-like systems
      become: true
      ansible.builtin.package:
        name:
          - base-devel
          - openssl
          - pkgconf
        state: present
      when: ansible_os_family == "Archlinux"


- hosts: nodes
  name: Install Rust
  vars:
    rust_version: 1.65.0
  tasks:
    - name: Get current cargo version, if any
      ansible.builtin.shell:
        cmd: ". $HOME/.cargo/env && cargo version"
      register: cargo_version
      ignore_errors: true
      changed_when: cargo_version.rc != 0

    - name: Exit playbook if cargo is already installed with the specified version
      ansible.builtin.meta: end_play
      when: cargo_version.stdout.split()[1] == vars.rust_version

    - name: Get rustup installer
      ansible.builtin.get_url:
        url: https://sh.rustup.rs
        dest: /tmp/rustup.sh
        mode: "0755"

    - name: Install rustup
      ansible.builtin.shell:
        cmd: /tmp/rustup.sh -y
      tags:
        # We've already checked that we don't run this unnecessarily.
        - skip_ansible_lint

    - name: Use specified Rust version
      ansible.builtin.shell:
        cmd: ". $HOME/.cargo/env && rustup override set {{ vars.rust_version }}"
      tags:
        - skip_ansible_lint

